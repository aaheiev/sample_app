---
version: "3.8"
#x-airflow-common:
#  &airflow-common
#  image:                             ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.0.1}
#  environment:
#    &airflow-common-env
#    AIRFLOW__CORE__EXECUTOR:         CeleryExecutor
#    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:kaiR7doj7ih9Phei@postgres:5432/airflow
#    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:kaiR7doj7ih9Phei@postgres:5432/airflow
#    AIRFLOW__CELERY__BROKER_URL:     redis://:@redis:6379/0
#    AIRFLOW__CORE__FERNET_KEY:       k2xj13ZowNzTLFGWPTTIzam5WE-xilHrG8jQX8ycst0=
#    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
#    AIRFLOW__CORE__LOAD_EXAMPLES:    'false'
#  volumes:
#    - ./dags:/opt/airflow/dags
#    - ./logs:/opt/airflow/logs
#    - ./plugins:/opt/airflow/plugins
#  user:                              "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
#  depends_on:
#    redis:
#      condition: service_healthy
#    postgres:
#      condition: service_healthy
secrets:
  db_pass:
    file: secrets/db_pass
  mysql_root_pass:
    file: secrets/mysql_root_pass

volumes:
  mysql_data:

services:

  redis:
    image:                      redis:6-alpine
    ports:
      - 6379:6379
    healthcheck:
      test:                     [ "CMD", "redis-cli", "ping" ]
      interval:                 5s
      timeout:                  30s
      retries:                  50
    restart:                    unless-stopped

  mysql:
    image:                      mysql:8.0
    environment:
      MYSQL_DATABASE:           sample_app
      MYSQL_USER:               sample_app
      MYSQL_PASSWORD_FILE:      /run/secrets/db_pass
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_pass
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    secrets:
      - mysql_root_pass
      - db_pass
    healthcheck:
      test:                     [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval:                 5s
      timeout:                  20s
      retries:                  10
    restart:                    unless-stopped

#  airflow-webserver:
#    <<: *airflow-common
#    command: webserver
#    ports:
#      - 8080:8080
#    healthcheck:
#      test:     [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
#      interval: 10s
#      timeout:  10s
#      retries:  5
#    restart:    unless-stopped
#
#  airflow-scheduler:
#    <<: *airflow-common
#    command: scheduler
#    restart: always
###  docker-compose --scale airflow-worker=3
###  docker-compose up -d --scale airflow-worker=7 --no-recreate
#  airflow-worker:
#    <<: *airflow-common
#    command: celery worker
#    restart: always
#
#  airflow-init:
#    <<: *airflow-common
#    command: version
#    environment:
#      <<: *airflow-common-env
#      _AIRFLOW_DB_UPGRADE:        'true'
#      _AIRFLOW_WWW_USER_CREATE:   'true'
#      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
#      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
#
#  flower:
#    <<: *airflow-common
#    command: celery flower
#    ports:
#      - 5555:5555
#    healthcheck:
#      test:     [ "CMD", "curl", "--fail", "http://localhost:5555/" ]
#      interval: 10s
#      timeout:  10s
#      retries:  5
#    restart:    unless-stopped
