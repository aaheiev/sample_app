---
version: "3.8"
#x-airflow-common:
#  &airflow-common
#  image:                             ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.0.1}
#  environment:
#    &airflow-common-env
#    AIRFLOW__CORE__EXECUTOR:         CeleryExecutor
#    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:kaiR7doj7ih9Phei@postgres:5432/airflow
#    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:kaiR7doj7ih9Phei@postgres:5432/airflow
#    AIRFLOW__CELERY__BROKER_URL:     redis://:@redis:6379/0
#    AIRFLOW__CORE__FERNET_KEY:       k2xj13ZowNzTLFGWPTTIzam5WE-xilHrG8jQX8ycst0=
#    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
#    AIRFLOW__CORE__LOAD_EXAMPLES:    'false'
#  volumes:
#    - ./dags:/opt/airflow/dags
#    - ./logs:/opt/airflow/logs
#    - ./plugins:/opt/airflow/plugins
#  user:                              "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
#  depends_on:
#    redis:
#      condition: service_healthy
#    postgres:
#      condition: service_healthy
secrets:
  db_pass:
    file: secrets/db_pass

#volumes:
#  postgres_data:

services:

#  redis:
#    image:                      redis:6-alpine
#    ports:
#      - 6379:6379
#    healthcheck:
#      test:                     [ "CMD", "redis-cli", "ping" ]
#      interval:                 5s
#      timeout:                  30s
#      retries:                  50
#    restart:                    unless-stopped
  mailcatcher:
    image:                      schickling/mailcatcher
    ports:
      - 1025:1025
      - 1080:1080
  postgres:
    image:                      postgres:13-alpine
    environment:
      POSTGRES_USER:            sample_app
      POSTGRES_PASSWORD_FILE:   /run/secrets/db_pass
      POSTGRES_DB:              sample_app
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
#      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    secrets:
      - db_pass
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "sample_app" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
